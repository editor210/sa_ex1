test <- data(AirPassengers)
data_transform <- function(data){
#transforming the data variable into a dataframe
#and the values as integers
data <- as.data.frame(as.integer(data))
#Assigning the name of the column
colnames(data) <- "Passengers"
#Including the Years and Months columns
data <- data %>% mutate(Year = rep(seq(1949,1960), each = 12),
Month = rep(c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"), 12))
#Rearranging the columns to make it more readable
data <- data[c("Year", "Month", "Passengers")]
return(data)
}
test <- data(AirPassengers)
test <- data_transform(AirPassengers)
#get the AirPassengers dataset from R and transform the data into a df
library(tidyverse)
test <- data_transform(AirPassengers)
AirPassengers
test <- data_transform(AirPassengers)
test
test <- data_transform(AirPassengers)
test <- data_transform(AirPassengers)
library(tidyverse)
#Assigning the data set to the variable
data <- AirPassengers
data_transform <- function(data, by_year = FALSE){
#transforming the data variable into a dataframe
#and the values as integers
data <- as.data.frame(as.integer(data))
#Assigning the name of the column
colnames(data) <- "Passengers"
#Including the Years and Months columns
data <- data %>% mutate(Year = rep(seq(1949,1960), each = 12),
Month = rep(c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"), 12))
#Rearranging the columns to make it more readable
data <- data[c("Year", "Month", "Passengers")]
#Including the change of the second argument
if (by_year == TRUE){
data <- data %>% group_by(Year) %>% summarise(Passengers = sum(Passengers))
}
return(data)
}
test <- data_transform(AirPassengers)
head(test)
test <- data_transform(AirPassengers, by_year = TRUE)
head(test)
data_transform(AirPassengers)
data_transform(AirPassengers, by_year = TRUE)
knitr::opts_chunk$set(echo = TRUE)
AirPassengers
#Assigning the data to a variable
data <- AirPassengers
#Importing the function from the R file of the repository
source("transform_data.R")
#Assigning the data to a variable
data <- AirPassengers
#Importing the function from the R file of the repository
source("data_transformation.R")
#Printing the transformed data
print(head(data_transform(data)))
#Printing the transformed data grouped by year
print(head(data_transform(data, by_year = TRUE)))
knitr::opts_chunk$set(echo = TRUE)
AirPassengers
#Assigning the data to a variable
data <- AirPassengers
#Importing the function from the R file of the repository
source("data_transformation.R")
#Printing the transformed data
print(head(data_transform(data)))
#Printing the transformed data grouped by year
print(head(data_transform(data, by_year = TRUE)))
knitr::opts_chunk$set(echo = TRUE)
#Importing the function from the R file of the repository
source("data_transformation.R")
AirPassengers
#Assigning the data to a variable
data <- AirPassengers
#Using the function
data <- data_transform(data)
#Printing the transformed data
print(head(data))
#Printing the transformed data grouped by year
print(head(data_transform(data, by_year = TRUE)))
knitr::opts_chunk$set(echo = TRUE)
#Importing the function from the R file of the repository
source("data_transformation.R")
AirPassengers
#Assigning the data to a variable
data <- AirPassengers
#Using the function
data <- data_transform(data)
#Printing the transformed data
print(head(data))
#Assigning the original AirPassengers to the dataset
data_by_year <- AirPassengers
#Printing the transformed data grouped by year
data_by_year <- data_transform(data_by_year = TRUE)
knitr::opts_chunk$set(echo = TRUE)
#Importing the function from the R file of the repository
source("data_transformation.R")
AirPassengers
#Assigning the data to a variable
data <- AirPassengers
#Using the function
data <- data_transform(data)
#Printing the transformed data
print(head(data))
#Assigning the original AirPassengers to the dataset
data_by_year <- AirPassengers
#Printing the transformed data grouped by year
data_by_year <- data_transform(data_by_year, by_year = TRUE)
#Printing the result
print(head(data_by_year))
